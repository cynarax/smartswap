/* tslint:disable */
/* eslint-disable */
/**
 * SmartSwap Backend API
 * Production-ready REST API for minimal CEX/DEX backend, in-memory orderbook, swap simulation, and quoting. Designed for low-latency and extensibility. All amounts and prices are strings (decimals) for precise compatibility with DeFi and frontend logic. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Order } from './Order';
import {
    OrderFromJSON,
    OrderFromJSONTyped,
    OrderToJSON,
    OrderToJSONTyped,
} from './Order';

/**
 * List of all orders
 * @export
 * @interface OrderListResponse
 */
export interface OrderListResponse {
    /**
     * 
     * @type {Array<Order>}
     * @memberof OrderListResponse
     */
    orders?: Array<Order>;
}

/**
 * Check if a given object implements the OrderListResponse interface.
 */
export function instanceOfOrderListResponse(value: object): value is OrderListResponse {
    return true;
}

export function OrderListResponseFromJSON(json: any): OrderListResponse {
    return OrderListResponseFromJSONTyped(json, false);
}

export function OrderListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'orders': json['orders'] == null ? undefined : ((json['orders'] as Array<any>).map(OrderFromJSON)),
    };
}

export function OrderListResponseToJSON(json: any): OrderListResponse {
    return OrderListResponseToJSONTyped(json, false);
}

export function OrderListResponseToJSONTyped(value?: OrderListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'orders': value['orders'] == null ? undefined : ((value['orders'] as Array<any>).map(OrderToJSON)),
    };
}

